{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres R. Bucheli\\\\Desktop\\\\reddit-client-clone\\\\src\\\\features\\\\Home\\\\Home.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AnimatedList } from 'react-animated-list';\nimport Post from '../Post/Post';\nimport PostLoading from '../Post/PostLoading';\nimport getRandomNumber from '../../utils/getRandomNumber';\nimport { fetchPosts, selectFilteredPosts, setSearchTerm, fetchComments } from '../../store/redditSlice';\nimport './Home.css';\nconst Home = () => {\n  const reddit = useSelector(state => state.reddit);\n  const {\n    isLoading,\n    error,\n    searchTerm,\n    selectedSubreddit\n  } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n    // eslint-disable-next-line \n  }, [selectedSubreddit]);\n  const onToggleComments = index => {\n    const getComments = permalink => {\n      dispatch(fetchComments(index, permalink));\n    };\n    return getComments;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(AnimatedList, {\n      animation: \"zoom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, Array(getRandomNumber(3, 10)).fill( /*#__PURE__*/React.createElement(PostLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 45\n      }\n    })));\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Failed to load posts.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => dispatch(fetchPosts(selectedSubreddit)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Try again\"));\n  }\n  if (posts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"No posts matching \", searchTerm), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => dispatch(setSearchTerm('')),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Go home\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, posts.map((post, index) => /*#__PURE__*/React.createElement(Post, {\n    key: post.id,\n    post: post,\n    onToggleComments: onToggleComments(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AnimatedList","Post","PostLoading","getRandomNumber","fetchPosts","selectFilteredPosts","setSearchTerm","fetchComments","Home","reddit","state","isLoading","error","searchTerm","selectedSubreddit","posts","dispatch","onToggleComments","index","getComments","permalink","createElement","animation","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","className","type","onClick","length","Fragment","map","post","key","id"],"sources":["C:/Users/Andres R. Bucheli/Desktop/reddit-client-clone/src/features/Home/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AnimatedList } from 'react-animated-list';\nimport Post from '../Post/Post';\nimport PostLoading from '../Post/PostLoading';\nimport getRandomNumber from '../../utils/getRandomNumber';\nimport {\n  fetchPosts,\n  selectFilteredPosts,\n  setSearchTerm,\n  fetchComments,\n} from '../../store/redditSlice';\nimport './Home.css';\n\nconst Home = () => {\n  const reddit = useSelector((state) => state.reddit);\n  const { isLoading, error, searchTerm, selectedSubreddit } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n    // eslint-disable-next-line \n  }, [selectedSubreddit]);\n\n  const onToggleComments = (index) => {\n    const getComments = (permalink) => {\n      dispatch(fetchComments(index, permalink));\n    };\n\n    return getComments;\n  };\n\n  if (isLoading) {\n    return (\n      <AnimatedList animation=\"zoom\">\n        {Array(getRandomNumber(3, 10)).fill(<PostLoading />)}\n      </AnimatedList>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <h2>Failed to load posts.</h2>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(fetchPosts(selectedSubreddit))}\n        >\n          Try again\n        </button>\n      </div>\n    );\n  }\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"error\">\n        <h2>No posts matching {searchTerm}</h2>\n        <button type=\"button\" onClick={() => dispatch(setSearchTerm(''))}>\n          Go home\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {posts.map((post, index) => (\n        <Post\n          key={post.id}\n          post={post}\n          onToggleComments={onToggleComments(index)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}